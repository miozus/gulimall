<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="cn.miozus.gulimall.product.dao.SkuSaleAttrValueDao">

    <!-- 可根据自己的需求，是否要使用 -->
    <resultMap type="cn.miozus.gulimall.product.entity.SkuSaleAttrValueEntity" id="skuSaleAttrValueMap">
        <result property="id" column="id"/>
        <result property="skuId" column="sku_id"/>
        <result property="attrId" column="attr_id"/>
        <result property="attrName" column="attr_name"/>
        <result property="attrValue" column="attr_value"/>
        <result property="attrSort" column="attr_sort"/>
    </resultMap>
    <resultMap id="saleAttrsBySkuId" type="cn.miozus.gulimall.product.vo.SkuItemVo$SkuItemSaleAttrVo">
        <result property="attrId" column="attr_id"/>
        <result property="attrName" column="attr_name"/>
        <collection property="attrValues" ofType="cn.miozus.gulimall.product.vo.SkuItemVo$AttrValueWithSkuIdVo">
            <result property="attrValue" column="attr_value"/>
            <result property="skuIds" column="sku_ids"/>
        </collection>
    </resultMap>
    <select id="getSaleAttrsBySpuId" resultMap="saleAttrsBySkuId">
        -- 传入 spuId，分析 spu 有多少个 sku ，所有 sku 的属性组合
        SELECT ssav.attr_id,
               ssav.attr_name,
               ssav.attr_value,
               GROUP_CONCAT(DISTINCT info.sku_id ) AS sku_ids
        FROM pms_sku_info AS info
                 LEFT JOIN pms_sku_sale_attr_value AS ssav ON ssav.sku_id = info.sku_id
        WHERE info.spu_id = #{spuId}
        GROUP BY ssav.attr_id,
                 ssav.attr_name,
                 ssav.attr_value
    </select>
    <select id="querySkuAttrs" resultType="java.lang.String">
        SELECT
            CONCAT( attr_name, ":", attr_value )
        FROM
            `pms_sku_sale_attr_value`
        WHERE
            sku_id = #{skuId}
    </select>


</mapper>